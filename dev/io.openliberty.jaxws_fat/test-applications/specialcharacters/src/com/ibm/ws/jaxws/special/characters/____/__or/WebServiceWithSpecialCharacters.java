/*******************************************************************************
 * Copyright (c) 2025 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License 2.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 *******************************************************************************/
package com.ibm.ws.jaxws.special.characters.____.__or;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.6
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "WebServiceWithSpecialCharacters", targetNamespace = "http://characters.special.jaxws.ws.ibm.com/:.!?$()or.=*#,", wsdlLocation = "WEB-INF/wsdl/WebServiceWithSpecialCharacters.wsdl")
public class WebServiceWithSpecialCharacters
    extends Service
{

    private static final URL WEBSERVICEWITHSPECIALCHARACTERS_WSDL_LOCATION;
    private static final WebServiceException WEBSERVICEWITHSPECIALCHARACTERS_EXCEPTION;
    private static final QName WEBSERVICEWITHSPECIALCHARACTERS_QNAME = new QName("http://characters.special.jaxws.ws.ibm.com/:.!?$()or.=*#,", "WebServiceWithSpecialCharacters");

    private final static Logger logger = Logger.getLogger(WebServiceWithSpecialCharacters.class.getName());
    
    static {
        URL url = null;
        WebServiceException e = null;
        String urlString = null;
        try {
            URL baseUrl = com.ibm.ws.jaxws.special.characters.____.__or.WebServiceWithSpecialCharacters.class.getResource(".");
            String host = System.getProperty("hostName");
            if (host == null) {
                logger.info("Failed to obtain host from system property, hostName, falling back to localhost");
                host = "localhost";
            }
            urlString = new StringBuilder().append("http://").append(host).append(":").append(Integer.getInteger("bvt.prop.HTTP_default")).append("/specialcharacters/WebServiceWithSpecialCharacters?wsdl").toString();
            url = new URL(baseUrl, urlString);
        } catch (MalformedURLException ex) {
            logger.warning("Failed to create URL for the wsdl Location: " + urlString);
            e = new WebServiceException(ex);
        }
        WEBSERVICEWITHSPECIALCHARACTERS_EXCEPTION = e;
        WEBSERVICEWITHSPECIALCHARACTERS_WSDL_LOCATION = url;    
    }

    public WebServiceWithSpecialCharacters() {
        super(__getWsdlLocation(), WEBSERVICEWITHSPECIALCHARACTERS_QNAME);
    }

    public WebServiceWithSpecialCharacters(WebServiceFeature... features) {
        super(__getWsdlLocation(), WEBSERVICEWITHSPECIALCHARACTERS_QNAME, features);
    }

    public WebServiceWithSpecialCharacters(URL wsdlLocation) {
        super(wsdlLocation, WEBSERVICEWITHSPECIALCHARACTERS_QNAME);
    }

    public WebServiceWithSpecialCharacters(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, WEBSERVICEWITHSPECIALCHARACTERS_QNAME, features);
    }

    public WebServiceWithSpecialCharacters(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WebServiceWithSpecialCharacters(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns WebServiceWithSpecialCharactersPortType
     */
    @WebEndpoint(name = "soap12WebServiceWithSpecialCharactersSoap")
    public WebServiceWithSpecialCharactersPortType getSoap12WebServiceWithSpecialCharactersSoap() {
        return super.getPort(new QName("http://characters.special.jaxws.ws.ibm.com/:.!?$()or.=*#,", "soap12WebServiceWithSpecialCharactersSoap"), WebServiceWithSpecialCharactersPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WebServiceWithSpecialCharactersPortType
     */
    @WebEndpoint(name = "soap12WebServiceWithSpecialCharactersSoap")
    public WebServiceWithSpecialCharactersPortType getSoap12WebServiceWithSpecialCharactersSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://characters.special.jaxws.ws.ibm.com/:.!?$()or.=*#,", "soap12WebServiceWithSpecialCharactersSoap"), WebServiceWithSpecialCharactersPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (WEBSERVICEWITHSPECIALCHARACTERS_EXCEPTION!= null) {
            throw WEBSERVICEWITHSPECIALCHARACTERS_EXCEPTION;
        }
        return WEBSERVICEWITHSPECIALCHARACTERS_WSDL_LOCATION;
    }

}
