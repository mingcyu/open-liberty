###############################################################################
# Copyright (c) 2011, 2025 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License 2.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-2.0/
# 
# SPDX-License-Identifier: EPL-2.0
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#CMVCPATHNAME com.ibm.ws.classloading/resources/OSGI-INF/l10n/library.properties
#ISMESSAGEFILE FALSE
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE
#
#the library type
library.service.name=Shared Library
library.service.desc=Shared Library
#attributes for the library type
# instanceId
library.id=ID
library.id.desc=ID by which this library will be referenced
# name
library.name=Name
library.name.desc=Name of shared library for administrators
# description
library.description=Description
library.description.desc=Description of shared library for administrators
# filesetRef
library.fileset.ref=Fileset
library.fileset.ref$Ref=Fileset reference
library.fileset.ref.desc=Specifies a set of JAR or ZIP files to include in the class path for this library
# allowed api types
library.apis=Allowed API types
library.apis.desc=The types of API packages that this class loader supports. This value is a comma-separated list of any combination of the following API packages: spec, ibm-api, api, stable, third-party.
library.api.spec=Spec interfaces
library.api.spec.desc=Interfaces from formal specifications implemented or supported by the runtime, e.g. Java EE. 
library.api.ibmapi=IBM APIs
library.api.ibmapi.desc=Application programming interfaces defined by IBM
library.api.api=APIs
library.api.api.desc=Application programming interfaces
library.api.thirdparty=Third party interfaces 
library.api.thirdparty.desc=Interfaces defined by third party vendors
library.folder.ref=Folder
library.folder.ref$Ref=Folder reference
library.file.ref=File
library.file.ref$Ref=File reference
library.path.ref=Path
library.path.ref$Ref=Path reference
#File element
file=File
file.desc=Add a JAR or ZIP file to include in the class path for this library. Classes and resources contained in the specified JAR or ZIP are available to load for this library.
file.name=Name
file.name.desc=The path to a file can be a fully qualified path or a relative path. Relative paths are relative to the value of the ${server.config.dir} property.
# Folder element
folder.name=Folder
folder.name.desc=Add a folder to include in the class path for this library. Classes and resources contained in the specified folder and its sub-folders are available to load for this library. JAR and ZIP files contained in the folder are not added to the class path for this library.
folder.dir=Folder
folder.dir.desc=The path to a folder can be a fully qualified path or a relative path. Relative paths are relative to the value of  the ${server.config.dir} property.
#path element
path=Path
path.desc=Add a JAR file, ZIP file or folder to include in the class path for this library. If the specified path is a JAR or ZIP file then classes and resources contained in the specified JAR or ZIP file are available to load for this library. If the specified path is a folder then classes and resources contained in the specified folder and its sub-folders are available to load for this library, and JAR or ZIP files contained in the folder are not added to the class path for this library.
path.name=Name
path.name.desc=The path can be a fully qualified path or a relative path. Relative paths are relative to the value of  the ${server.config.dir} property.
# Config for automatic libraries
automatic.desc=Configure automatic libraries
automatic.name=Automatic Libraries
automatic.enable.name=Monitor
automatic.enable.desc=Monitor the automatic library folder for new or deleted libraries

